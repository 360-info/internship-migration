select(gender, typeOfExploitConcatenated, majorityStatus) %>%
drop_na(typeOfExploitConcatenated, majorityStatus) %>%
count(gender, typeOfExploitConcatenated, majorityStatus) %>%
group_by(typeOfExploitConcatenated) %>%
mutate(pct = round((n/sum(n)),4)) %>%
arrange(desc(n)) %>%
head(16)
htEx1
fp4 <- htEx1 %>%
ggplot(aes(x = typeOfExploitConcatenated, y = n,
group = gender,fill = gender, alpha = majorityStatus)) +
geom_col(position = "dodge", colour = "darkgrey", width = 0.7) +
theme_minimal() +
theme(axis.text.x = element_text(size = 10, angle = 8))
fp4
colourp = c(Male = "#f6ce55", Female = "#990000")
# create a new column for gender and majoritystatus together
fp5 <- htEx1 %>%
ggplot(aes(x = typeOfExploitConcatenated,
y = round(pct,2))) +
geom_col(aes(fill = gender, group = typeOfExploitConcatenated,
alpha = majorityStatus),position = "dodge", colour = "darkgrey", width = 0.7) +
scale_fill_manual(values = colourp) +
theme_minimal() +
coord_flip() +
ylab("Percentage") +
xlab("Type of Exploits") +
ggtitle("Percentage of Victim's Gender Group")
ggplotly(fp5)
htEx1 <- htEx1 %>%
mutate(genderGroup =
paste(gender, tolower(majorityStatus),
sep = ' '))
htEx1 <- htEx1 %>%
group_by(genderGroup) %>%
mutate(typeOfExploitConcatenated = fct_reorder(typeOfExploitConcatenated,
pct)) %>%
ungroup()
htEx1 <- htEx1 %>%
mutate(genderGroup = fct_reorder(genderGroup, -pct))
excount <- ht %>%  # dataset for type of exploits
select(gender, typeOfExploitConcatenated, majorityStatus) %>%
drop_na(typeOfExploitConcatenated) %>%
group_by(typeOfExploitConcatenated) %>%
count(typeOfExploitConcatenated) %>%
arrange(desc(n)) %>%
head(6)
colourGP = c("Male adult" = "#ffc249",
"Male minor" = "#ffeac1",
"Female adult" = "#ff3212",
"Female minor" = "#ff7b7b")
fp6 <- htEx1 %>%
ggplot(aes(x = typeOfExploitConcatenated,
y = round(pct,2),
label = scales::percent(pct))) +
geom_col(aes(fill = genderGroup,
group = genderGroup),
position = position_fill(reverse = TRUE),
colour = "white",
width = 0.7) +
theme_360() +
scale_fill_manual(values = colourGP) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Sexual and labour exploitation" =
paste0(
"Sexual and\nlabour exploitation\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Sexual and labour exploitation")], ")"),
"Sexual exploitation" =
paste0(
"Sexual exploitation\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Sexual exploitation")],
")"),
"Forced labour" =
paste0("Forced labour\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Forced labour")],
")"),
"Other" =
paste0("Other\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Other")],
")"),
"Forced marriage" =
paste0("Forced marriage\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Forced marriage")],
")"))) +
coord_flip() +
ylab("Percentage") +
xlab("Type of Exploits") +
labs(title = toupper("Distribution of Victims"),
subtitle = toupper("From reported human trafficking cases 2002-2019 "),
caption = paste(
"**CHART:** Ruimin Lin, James Goldie, 360info",
"**DATA:** Counter Trafficking Data Collaborative",
sep = "<br>")) +
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major.y = element_blank()) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
fp6
# save_360plot(fp6, "out/figures/victimdistributions.png",
#             shape = "sdtv-landscape")
fp1 + fp3 + fp4
grid.arrange(fp1 + fp3 + fp4, nrow = 2)
library(gridExtra)
grid.arrange(fp1,fp3,fp4, nrow = 2)
grid.arrange(fp1,fp3,fp4, nrow = 3)
grid.arrange(fp1,fp2nrow = 2)
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp1,fp2,ncol = 2)
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6,nrow = 2)
# plot for demonstration
fp6a <- htEx1 %>%
ggplot(aes(x = typeOfExploitConcatenated,
y = round(pct,2),
label = scales::percent(pct))) +
geom_col(aes(fill = genderGroup,
group = genderGroup),
position = position_fill(reverse = TRUE),
colour = "white",
width = 0.7) +
theme_minimal() +
scale_fill_manual(values = colourGP) +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels = c("Sexual and labour exploitation" =
paste0(
"Sexual and\nlabour exploitation\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Sexual and labour exploitation")], ")"),
"Sexual exploitation" =
paste0(
"Sexual exploitation\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Sexual exploitation")],
")"),
"Forced labour" =
paste0("Forced labour\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Forced labour")],
")"),
"Other" =
paste0("Other\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Other")],
")"),
"Forced marriage" =
paste0("Forced marriage\n",
"(n = ",
excount$n[which(excount$typeOfExploitConcatenated==
"Forced marriage")],
")"))) +
coord_flip() +
ylab("Percentage") +
xlab("Type of Exploits") +
labs(title = toupper("Distribution of Victims"),
subtitle = toupper("From reported human trafficking cases 2002-2019 "),
caption = paste(
"**CHART:** Ruimin Lin, James Goldie, 360info",
"**DATA:** Counter Trafficking Data Collaborative",
sep = "<br>")) +
theme(legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major.y = element_blank()) +
guides(fill=guide_legend(nrow=2,byrow=TRUE))
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6a,nrow = 2)
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp6a, fp5, nrow = 2)
?grid.arrange
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6, nrow = 2, heights = (1, 2))
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6, nrow = 2, heights = c(1, 2))
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6a, nrow = 2, heights = c(1, 2))
grid.arrange(fp1,fp2,nrow = 2)
grid.arrange(fp3,fp4,nrow = 2)
grid.arrange(fp5,fp6a, nrow = 2, heights = c(1, 2))
mg <- read_csv("data/Missing_Migrants_Global_Figures_allData.csv")
mg <- mg %>%
mutate_at(vars(8:14),
funs(ifelse(is.na(.),0,.)))
# Converting NA values to 0, from columns `Number of Dead` to `Number of Children`.
?naniar
??naniar
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(plotly)
library(countrycode)
library(parsetR)
library(ggalluvial)
library(themes360info)
library(scales)
library(ggtext)
library(forcats)
library(knitr)
library(kableExtra)
library(gridExtra)
library(tidyverse)
mg <- read_csv("data/Missing_Migrants_Global_Figures_allData.csv")
mg <- mg %>%
mutate_at(vars(8:14),
funs(ifelse(is.na(.),0,.)))
# Converting NA values to 0, from columns `Number of Dead` to `Number of Children`.
mg1 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`)
# warning summarize
mg1 <- mg1 %>%
group_by(`Incident year`, `Region of Incident`) %>%
summarise(`Total Number of Dead and Missing` = sum(`Total Number of Dead and Missing`)) %>%
ungroup()
mg1 <- mg1 %>%
complete(`Incident year`,
`Region of Incident`)
mg1[is.na(missingMG1)] <- 0
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(plotly)
library(countrycode)
library(parsetR)
library(ggalluvial)
library(themes360info)
library(scales)
library(ggtext)
library(forcats)
library(knitr)
library(kableExtra)
library(gridExtra)
library(tidyverse)
library(patchwork)
knitr::include_graphics("out/figures/migrantsheatmap.png")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(plotly)
library(countrycode)
library(parsetR)
library(ggalluvial)
library(themes360info)
library(scales)
library(ggtext)
library(forcats)
library(knitr)
library(kableExtra)
library(gridExtra)
library(tidyverse)
library(patchwork)
t1 <- tibble(
Variable = c("Incident year", "Region of Incident", "Total Number of Dead and Missing"),
Description = c("Year of incident reported",
"Region of incident happened",
"Total number of dead and missing migrants recorded by the incident, minimum 0")
)
t1 %>%
kable(caption = "Variable description for Missing Migrants data") %>%
column_spec(1, bold = TRUE, background = "lightblue") %>%
kable_styling() %>%
kable_paper() %>%
scroll_box(width = "800px", height = "300px") %>%
footnote(general = "Data collected from Missing Migrants Project")
t2 <- tibble(
Variable = c("Type of Exploits", "Gender Group",
"Country of Citizenship", "Country of Exploitation"),
Description = c("Type of exploits identified from reported victims",
"Indicates the reported victim's gender and whether the victims is under the age of 18 or older at the time the victim is registered. The variable consists of combination of original variables `gender` and `majorityStatus`.",
"Indicates the nationality of the reported victim",
"Indicates the last country where the victim was exploited")
)
t2 %>%
kable(caption = "Variable description for Human Trafficking data") %>%
column_spec(1, bold = TRUE, background = "lightblue") %>%
kable_styling() %>%
kable_paper() %>%
scroll_box(width = "800px", height = "300px") %>%
footnote(general = "Data collected from Coutner Trafficking Data Collaborative")
mg <- read_csv("data/Missing_Migrants_Global_Figures_allData.csv")
mg <- mg %>%
mutate_at(vars(8:14),
funs(ifelse(is.na(.),0,.)))
# Converting NA values to 0, from columns `Number of Dead` to `Number of Children`.
mg1 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`)
# warning summarize
mg1 <- mg1 %>%
group_by(`Incident year`, `Region of Incident`) %>%
summarise(`Total Number of Dead and Missing` = sum(`Total Number of Dead and Missing`)) %>%
ungroup()
mg1 <- mg1 %>%
complete(`Incident year`,
`Region of Incident`)
mg1[is.na(mg1)] <- 0
mg1a <- mg1 %>%
group_by(`Region of Incident`) %>%
summarise(`Region total` = sum(`Total Number of Dead and Missing`)) %>%
mutate(pct = round((`Region total`/sum(`Region total`)),4),
Label = paste0(round(pct*100,1), "%"))
mhm1 <- mg1 %>%
ggplot(aes(x = `Incident year`,
y = `Region of Incident`,
fill = `Total Number of Dead and Missing`)) +
geom_tile(colour = "black") +
geom_text(aes(label = `Total Number of Dead and Missing`),
size = 3) +
scale_fill_gradient(low = "white", high = "red") +
theme_360() +
guides(fill="none") +
labs(title = toupper("Dead and Missing Migrants"),
subtitle = toupper(paste(
"Number of dead and missing migrants from reported",
"incidents 2014-2022",
sep = "\n")))
mhm2 <- mg1a %>%
ggplot(aes(x = `Region of Incident`,
y = pct,
alpha = pct)) +
geom_col(width = .7,
fill = "red") +
geom_text(aes(label = Label), hjust = -0.2, size = 3) +
scale_y_continuous(expand = expansion(mult = c(.0, .25))) +
theme_void() +
scale_alpha_continuous(range = c(0.5, 1)) +
guides(alpha="none") +
coord_flip()
mhmp1 <- mhm1 + mhm2 + plot_layout(ncol = 2, widths = c(2, 1.1))
mhmp1 <- mhmp1 +
plot_annotation(caption = paste(
"**CHART:** Ruimin Lin, James Goldie, 360info",
"**DATA:** Missing Migrants Project",
sep = "<br>"))
# save_360plot(mmp1, "out/figures/migrantsheatmap.png",
#             shape = "sdtv-landscape")
mhmp1
View(mg1a)
mg1
View(mg)
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Dead`,
`Minimum Estimated Number of Missing`,
)
mg
mg2
mg <- read_csv("data/Missing_Migrants_Global_Figures_allData.csv")
mg
mg <- read_csv("data/Missing_Migrants_Global_Figures_allData.csv")
mg <- mg %>%
mutate_at(vars(8:14),
funs(ifelse(is.na(.),0,.)))
# Converting NA values to 0, from columns `Number of Dead` to `Number of Children`.
mg1 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`)
# warning summarize
mg1 <- mg1 %>%
group_by(`Incident year`, `Region of Incident`) %>%
summarise(`Total Number of Dead and Missing` = sum(`Total Number of Dead and Missing`)) %>%
ungroup()
mg1 <- mg1 %>%
complete(`Incident year`,
`Region of Incident`)
mg1[is.na(mg1)] <- 0
mg1a <- mg1 %>%
group_by(`Region of Incident`) %>%
summarise(`Region total` = sum(`Total Number of Dead and Missing`)) %>%
mutate(pct = round((`Region total`/sum(`Region total`)),4),
Label = paste0(round(pct*100,1), "%"))
mhm1 <- mg1 %>%
ggplot(aes(x = `Incident year`,
y = `Region of Incident`,
fill = `Total Number of Dead and Missing`)) +
geom_tile(colour = "black") +
geom_text(aes(label = `Total Number of Dead and Missing`),
size = 3) +
scale_fill_gradient(low = "white", high = "red") +
theme_360() +
guides(fill="none") +
labs(title = toupper("Dead and Missing Migrants"),
subtitle = toupper(paste(
"Number of dead and missing migrants from reported",
"incidents 2014-2022",
sep = "\n")))
mhm2 <- mg1a %>%
ggplot(aes(x = `Region of Incident`,
y = pct,
alpha = pct)) +
geom_col(width = .7,
fill = "red") +
geom_text(aes(label = Label), hjust = -0.2, size = 3) +
scale_y_continuous(expand = expansion(mult = c(.0, .25))) +
theme_void() +
scale_alpha_continuous(range = c(0.5, 1)) +
guides(alpha="none") +
coord_flip()
mhmp1 <- mhm1 + mhm2 + plot_layout(ncol = 2, widths = c(2, 1.1))
mhmp1 <- mhmp1 +
plot_annotation(caption = paste(
"**CHART:** Ruimin Lin, James Goldie, 360info",
"**DATA:** Missing Migrants Project",
sep = "<br>"))
# save_360plot(mmp1, "out/figures/migrantsheatmap.png",
#             shape = "sdtv-landscape")
knitr::include_graphics("out/figures/migrantsheatmap.png")
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Dead`,
`Minimum Estimated Number of Missing`,
)
mg2
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Survivors`
)
mg2 <- mg2 %>%
mutate(`Total Number of Migrants` = `Total Number of Dead and Missing` + `Number of Survivors`)
mg2
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Survivors`
)
mg2 <- mg2 %>%
mutate(`Total Number of Migrants` = `Total Number of Dead and Missing` + `Number of Survivors`,
`Death rate` = round(`Total Number of Dead and Missing`/`Total Number of Migrants`, 4))
mg2
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Survivors`
)
mg2 <- mg2 %>%
mutate(`Total Number of Migrants` = `Total Number of Dead and Missing` + `Number of Survivors`,
`Death rate` = round((`Total Number of Dead and Missing`/`Total Number of Migrants`)*100, 2))
mg2
mg2 <- mg %>%
select(`Incident year`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Survivors`,
`Cause of Death`
)
mg2 <- mg2 %>%
mutate(`Total Number of Migrants` = `Total Number of Dead and Missing` + `Number of Survivors`,
`Death rate` = round((`Total Number of Dead and Missing`/`Total Number of Migrants`)*100, 2))
mg2
mg2 %>%
ggplot(aes(x = `Incident year`,
y = `Death rate`)) +
geom_line()
mg2 %>%
ggplot(aes(x = `Incident year`,
y = `Death rate`)) +
geom_line() +
facet_wrap(~`Region of Incident`)
mg
mg2 <- mg %>%
select(`Incident year`,
`Website Date`,
`Region of Incident`,
`Total Number of Dead and Missing`,
`Number of Survivors`,
`Cause of Death`
)
mg2 <- mg2 %>%
mutate(`Total Number of Migrants` = `Total Number of Dead and Missing` + `Number of Survivors`,
`Death rate` = round((`Total Number of Dead and Missing`/`Total Number of Migrants`)*100, 2))
mg2 %>%
ggplot(aes(x = `Website Date`,
y = `Death rate`)) +
geom_line() +
facet_wrap(~`Region of Incident`)
mg2 %>%
ggplot(aes(x = `Website Date`,
y = `Death rate`)) +
geom_line(colour = `Region of Incident`)
mg2 %>%
ggplot(aes(x = `Website Date`,
y = `Death rate`,
colour = `Region of Incident`)) +
geom_line()
