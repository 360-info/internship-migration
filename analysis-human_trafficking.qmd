---
title: "analysis - human trafficking"
author: "Ruimin Lin - 28757599"
code-fold: true
theme: style/article.scss
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(naniar)
library(gganimate)
library(plotly)
library(countrycode)
library(parsetR)
```

-   The human trafficking data is obtained from [Counter Trafficking Data Collaborative](https://www.ctdatacollaborative.org/dataset/resource/511adcb7-b1a2-4cc7-bf2f-0960d43a49cc).
-   The coordinate data for countries is obtained from [Tadas Tamo≈°auskas](https://gist.github.com/tadast/8827699).

```{r}
ct <- read_csv("data/The Global Dataset 14 Apr 2020.csv")


ct <- ct %>%
  select(-1) %>% # deselect unused column
  na_if(-99)     # replace all -99 values with NA as defined in the codebook

```

```{r}
ct$typeOfExploitConcatenated[ct$typeOfExploitConcatenated ==
                               "Forced labour;Sexual exploitation;Combined sexual and labour exploitation"] <-"Sexual and labour exploitation"

```

### Features of the victim Plot v1

```{r}
ctp1 <- ct %>%
  drop_na(typeOfExploitConcatenated) %>%
  ggplot(aes(x = typeOfExploitConcatenated, fill = gender)) +
  geom_bar(position = "dodge", width = .7) +
  theme_bw() +
  coord_flip()

ctp1

```

### Features of the victim Plot v2

```{r}

ctp1a <- ct %>%
  drop_na(majorityStatus, typeOfExploitConcatenated) %>%
  ggplot(aes(x = typeOfExploitConcatenated, fill = gender)) +
  geom_bar(position = "dodge", width = .7) +
  theme_bw() +
  coord_flip() +
  facet_wrap(~majorityStatus)

ggplotly(ctp1a)
```

### Features of the victim Plot v3

```{r}

ctEx <- ct %>%  # dataset for type of exploits
  select(gender, typeOfExploitConcatenated, majorityStatus) %>%
  drop_na(typeOfExploitConcatenated) %>%
  count(gender, typeOfExploitConcatenated) %>%
  group_by(typeOfExploitConcatenated) %>%
  mutate(pct = round((n/sum(n)),4)) %>%
  arrange(desc(n)) %>%
  head(10)

ctEx
```

```{r}
ctp1b <- ctEx %>%
  mutate(Label = paste0(n, "(",round(pct*100,2), "%", ")")) %>%
  ggplot(aes(x = typeOfExploitConcatenated, y = n,
             fill = gender)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = Label),
            position = position_dodge(width = 0.9),
            size = 3) +
  theme_bw()


ctp1b +
  theme(axis.text.x = element_text(size = 10, angle = 8))
```

```{r}
ctEx1 <- ct %>%  # dataset for type of exploits
  select(gender, typeOfExploitConcatenated, majorityStatus) %>%
  drop_na(typeOfExploitConcatenated, majorityStatus) %>%
  count(gender, typeOfExploitConcatenated, majorityStatus) %>%
  group_by(typeOfExploitConcatenated) %>%
  mutate(pct = round((n/sum(n)),4)) %>%
  arrange(desc(n)) %>%
  head(16)

ctEx1

ctp1c <- ctEx1 %>%
  ggplot(aes(x = typeOfExploitConcatenated, y = n,
             group = gender,fill = gender, alpha = majorityStatus)) +
  geom_col(position = "dodge", colour = "darkgrey", width = 0.7) +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 10, angle = 8))

ctp1c

```

```{r}

colourp = c(Male = "#f6ce55", Female = "#990000")

testp <- ctEx1 %>%
  ggplot(aes(x = typeOfExploitConcatenated, 
             y = round(pct,2))) +
  geom_col(aes(fill = gender, group = typeOfExploitConcatenated, 
               alpha = majorityStatus),position = "dodge", colour = "darkgrey", width = 0.7) +
  scale_fill_manual(values = colourp) +
  theme_minimal() +
  coord_flip() +
  ylab("Percentage") +
  xlab("Type of Exploits") +
  ggtitle("Percentage of Victim's Gender Group")


ggplotly(testp)

```


```{r}
ct2 <- ct %>%
  select(yearOfRegistration,
         gender,
         ageBroad, citizenship,
         CountryOfExploitation)%>%
  mutate(yearOfRegistration = as.character(yearOfRegistration))

ct2a <- ct2 %>%
  mutate(citizenship = countrycode(citizenship, origin = 'iso2c',
                                   destination = 'country.name'),
         CountryOfExploitation = countrycode(CountryOfExploitation, origin = 'iso2c',
                                             destination = 'country.name')) %>%
  drop_na(citizenship, CountryOfExploitation)

ct2a
```


```{r}
ct2b <- ct2a %>%
  group_by(citizenship, CountryOfExploitation)%>%
  summarize(counts = n()) %>%
  ungroup() %>%
  arrange(desc(counts)) %>%
  head(10)

ct2b1 <- ct2b %>%
  rename(CountryOfOrigin = citizenship)

parset(ct2b1, dimensions = c('CountryOfOrigin', 'CountryOfExploitation'), 
       value = htmlwidgets::JS("function(d){return d.counts}"), 
       tension = 0.5)
```


```{r}
#ctcountries stands for citizenship countries
ctcountries <- read_csv("data/countries_codes_and_coordinates.csv") %>%
  mutate(citizenship = `Alpha-2 code`) %>%
  distinct(`Alpha-2 code`, .keep_all = TRUE)

#excountries stands for countries the victim are exploitted to 
excountries <- read_csv("data/countries_codes_and_coordinates.csv") %>%
  mutate(CountryOfExploitation = `Alpha-2 code`) %>%
  distinct(`Alpha-2 code`, .keep_all = TRUE)

```

```{r}
# match the citizenship country code with country names and coordinates
ct1 <- ct %>%
  select(yearOfRegistration,
         gender,
         citizenship,
         typeOfExploitConcatenated,
         CountryOfExploitation) %>%
  drop_na(CountryOfExploitation)
ct1

ct1a <- left_join(ct1, ctcountries)

ct1a <- ct1a %>%
  mutate(CountryFrom = Country,
         LatitudeFrom = `Latitude (average)`,
         LongitudeFrom = `Longitude (average)`)

ct1a <- ct1a %>%
  select(citizenship,
         CountryFrom,
         LatitudeFrom,
         LongitudeFrom,
         yearOfRegistration,
         gender,
         typeOfExploitConcatenated,
         CountryOfExploitation)
```

```{r}

# match the country of exploitation code with country names and coordinates
ct1b <- left_join(ct1a, excountries)


ct1b <- ct1b %>%
  mutate(CountryOfExploitted = Country,
         LatitudeOfExploitation = `Latitude (average)`,
         LongitudeOfExploitation = `Longitude (average)`)

ct1b <- ct1b %>%
  select(citizenship,
         CountryFrom,
         LatitudeFrom,
         LongitudeFrom,
         yearOfRegistration,
         gender,
         typeOfExploitConcatenated,
         CountryOfExploitation,
         CountryOfExploitted,
         LatitudeOfExploitation,
         LongitudeOfExploitation
         )
```
